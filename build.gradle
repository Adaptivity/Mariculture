buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
}

apply plugin: 'forge'

ext.buildnumber = 0
if (System.getenv().BUILD_NUMBER)
    project.buildnumber = System.getenv().BUILD_NUMBER
else
    logger.lifecycle "SETTING BUILDNUMBER TO 0"

// define the properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = config.minecraft_version + "-" + config.mod_version
group= "com.github.joshiejack.mariculture" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Mariculture"

dependencies {
    compile "codechicken:CodeChickenCore:1.7.2-1.0.0:dev"
    compile "codechicken:NotEnoughItems:1.7.2-1.0.1:dev"
}

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    assetDir = "eclipse/assets"
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand ([
            'modid': project.archivesBaseName,
            'mod_version': project.config.mod_version,
            'minecraft_version': project.config.minecraft_version
        ])
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*build.properties'
        exclude '**/todolist.txt'
    }
}

project.version += '-' + project.buildnumber

jar {
    manifest {
        attributes 'FMLCorePlugin': 'mariculture.fishery.VanillaOverride'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest {
        attributes 'FMLCorePlugin': 'mariculture.fishery.VanillaOverride'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

task apiJar(type: Jar) {
    from(sourceSets.main.java) {
        include "mariculture/api/**"
    }
    classifier = 'api'
}

artifacts {
    archives deobfJar
    archives apiJar
}